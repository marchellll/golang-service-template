services:
  the-service:
    profiles: [dev]
    image: cosmtrek/air:v1.62.0
    # working_dir value has to be the same of mapped volume
    working_dir: /build
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - .:/build
    depends_on:
      - redis
      - mysql
      - postgres

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  mysql:
    image: docker.io/bitnami/mysql:8.4
    ports:
      - '3306:3306'
    volumes:
      - './mysql_data:/bitnami/mariadb'
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - MYSQL_ROOT_PASSWORD=the_root_password
      - MYSQL_USER=the_service_user
      - MYSQL_PASSWORD=the_service_password
      - MYSQL_DATABASE=the_service_database

    healthcheck:
      test: ['CMD', '/opt/bitnami/scripts/mysql/healthcheck.sh']
      interval: 15s
      timeout: 5s
      retries: 6

  postgres:
    image: bitnami/postgresql
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql
    ports:
      - "5432:5432"
    environment:
      POSTGRESQL_USERNAME: the_service_user
      POSTGRESQL_PASSWORD: the_service_password
      POSTGRESQL_DATABASE: the_service_database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U the_service_user"]
      interval: 5s
      timeout: 5s
      retries: 5


  # kafka:
  #   image: docker.io/bitnami/kafka:3.5
  #   ports:
  #     - "9092:9092"
  #   volumes:
  #     - "kafka_data:/bitnami"
  #   environment:
  #     # KRaft settings
  #     - KAFKA_CFG_NODE_ID=0
  #     - KAFKA_CFG_PROCESS_ROLES=controller,broker
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
  #     # Listeners
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT


# Names our volume
# volumes:
  # my-db:
  # postgres-data:
  # kafka_data:
  #   driver: local
