services:
  the-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
    # volumes:
    #   - .:/app
    depends_on:
      - redis
      - postgres
      # - kafka

  redis:
    image: "redis:alpine"

    # # open this port to access from outside
    # ports:
    #   - "6379:6379"
    # mysql:
    #   platform: linux/x86_64
    #   image: mysql:5.7
    #   environment:
    #     MYSQL_DATABASE: 'db'
    #     # So you don't have to use root, but you can if you like
    #     MYSQL_USER: 'theuser'
    #     # You can use whatever password you like
    #     MYSQL_PASSWORD: 'password'
    #     # Password for root access
    #     MYSQL_ROOT_PASSWORD: 'password'
    #   ports:
    #   # # open this port to access from outside
    #     - '3306:3306'
    #   expose:
    #   # # open this port to access from outside
    #     - '3306'
    #     # Where our data will be persisted
    #   volumes:
    #     - my-db:/var/lib/mysql

  postgres:
    image: postgres
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql
    # open this port to access from outside
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: data

  # kafka:
  #   image: docker.io/bitnami/kafka:3.5
  #   ports:
  #     - "9092:9092"
  #   volumes:
  #     - "kafka_data:/bitnami"
  #   environment:
  #     # KRaft settings
  #     - KAFKA_CFG_NODE_ID=0
  #     - KAFKA_CFG_PROCESS_ROLES=controller,broker
  #     - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
  #     # Listeners
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #     - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  #     - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT


# Names our volume
volumes:
  # my-db:
  postgres-data:
  # kafka_data:
  #   driver: local